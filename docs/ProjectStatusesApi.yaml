ProjectStatusesApi:
  createProjectStatusForProject: |-
    const Asana = require('asana');
    
    let client = Asana.ApiClient.instance;
    let token = client.authentications['token'];
    token.accessToken = '<YOUR_ACCESS_TOKEN>';
    
    let projectStatusesApiInstance = new Asana.ProjectStatusesApi();
    let body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}}; // Object | The project status to create.
    let project_gid = "1331"; // String | Globally unique identifier for the project.
    let opts = { 
        'opt_fields': "author,author.name,color,created_at,created_by,created_by.name,html_text,modified_at,text,title"
    };
    projectStatusesApiInstance.createProjectStatusForProject(body, project_gid, opts).then((result) => {
        console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
    }, (error) => {
        console.error(error.response.body);
    });
    
  deleteProjectStatus: |-
    const Asana = require('asana');
    
    let client = Asana.ApiClient.instance;
    let token = client.authentications['token'];
    token.accessToken = '<YOUR_ACCESS_TOKEN>';
    
    let projectStatusesApiInstance = new Asana.ProjectStatusesApi();
    let project_status_gid = "321654"; // String | The project status update to get.

    projectStatusesApiInstance.deleteProjectStatus(project_status_gid).then((result) => {
        console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
    }, (error) => {
        console.error(error.response.body);
    });
    
  getProjectStatus: |-
    const Asana = require('asana');
    
    let client = Asana.ApiClient.instance;
    let token = client.authentications['token'];
    token.accessToken = '<YOUR_ACCESS_TOKEN>';
    
    let projectStatusesApiInstance = new Asana.ProjectStatusesApi();
    let project_status_gid = "321654"; // String | The project status update to get.
    let opts = { 
        'opt_fields': "author,author.name,color,created_at,created_by,created_by.name,html_text,modified_at,text,title"
    };
    projectStatusesApiInstance.getProjectStatus(project_status_gid, opts).then((result) => {
        console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
    }, (error) => {
        console.error(error.response.body);
    });
    
  getProjectStatusesForProject: |-
    const Asana = require('asana');
    
    let client = Asana.ApiClient.instance;
    let token = client.authentications['token'];
    token.accessToken = '<YOUR_ACCESS_TOKEN>';
    
    let projectStatusesApiInstance = new Asana.ProjectStatusesApi();
    let project_gid = "1331"; // String | Globally unique identifier for the project.
    let opts = { 
        'limit': 50, 
        'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", 
        'opt_fields': "author,author.name,color,created_at,created_by,created_by.name,html_text,modified_at,offset,path,text,title,uri"
    };
    projectStatusesApiInstance.getProjectStatusesForProject(project_gid, opts).then((result) => {
        console.log('API called successfully. Returned data: ' + JSON.stringify(result.data, null, 2));
    }, (error) => {
        console.error(error.response.body);
    });
    
