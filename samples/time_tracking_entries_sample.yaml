timetrackingentries: 
    createTimeTrackingEntry: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.timetrackingentries.createTimeTrackingEntry(taskGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    deleteTimeTrackingEntry: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.timetrackingentries.deleteTimeTrackingEntry(timeTrackingEntryGid)
            .then((result) => {
                console.log(result);
            });
    getTimeTrackingEntriesForTask: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.timetrackingentries.getTimeTrackingEntriesForTask(taskGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getTimeTrackingEntry: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.timetrackingentries.getTimeTrackingEntry(timeTrackingEntryGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    updateTimeTrackingEntry: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.timetrackingentries.updateTimeTrackingEntry(timeTrackingEntryGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
