goals: 
    addFollowers: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.addFollowers(goalGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    addSubgoal: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.addSubgoal(goalGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    addSupportingWorkForGoal: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.addSupportingWorkForGoal(goalGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    createGoal: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.createGoal({field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    createGoalMetric: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.createGoalMetric(goalGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    deleteGoal: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.deleteGoal(goalGid)
            .then((result) => {
                console.log(result);
            });
    getGoal: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.getGoal(goalGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getGoals: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.getGoals({param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getParentGoalsForGoal: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.getParentGoalsForGoal(goalGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getSubgoalsForGoal: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.getSubgoalsForGoal(goalGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    removeFollowers: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.removeFollowers(goalGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    removeSubgoal: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.removeSubgoal(goalGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    removeSupportingWorkForGoal: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.removeSupportingWorkForGoal(goalGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    supportingWork: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.supportingWork(goalGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    updateGoal: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.updateGoal(goalGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    updateGoalMetric: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.goals.updateGoalMetric(goalGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
