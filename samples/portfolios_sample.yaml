portfolios: 
    addCustomFieldSettingForPortfolio: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.portfolios.addCustomFieldSettingForPortfolio(portfolioGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    addItemForPortfolio: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.portfolios.addItemForPortfolio(portfolioGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    addMembersForPortfolio: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.portfolios.addMembersForPortfolio(portfolioGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    createPortfolio: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.portfolios.createPortfolio({field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    deletePortfolio: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.portfolios.deletePortfolio(portfolioGid)
            .then((result) => {
                console.log(result);
            });
    getItemsForPortfolio: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.portfolios.getItemsForPortfolio(portfolioGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getPortfolio: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.portfolios.getPortfolio(portfolioGid, {param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    getPortfolios: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.portfolios.getPortfolios({param: "value", param: "value", opt_pretty: true})
            .then((result) => {
                console.log(result);
            });
    removeCustomFieldSettingForPortfolio: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.portfolios.removeCustomFieldSettingForPortfolio(portfolioGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    removeItemForPortfolio: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.portfolios.removeItemForPortfolio(portfolioGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    removeMembersForPortfolio: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.portfolios.removeMembersForPortfolio(portfolioGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
    updatePortfolio: >-
        const asana = require('asana');


        const client = asana.Client.create().useAccessToken('PERSONAL_ACCESS_TOKEN');


        client.portfolios.updatePortfolio(portfolioGid, {field: "value", field: "value", pretty: true})
            .then((result) => {
                console.log(result);
            });
