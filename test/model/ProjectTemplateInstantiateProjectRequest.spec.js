/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Asana);
  }
}(this, function(expect, Asana) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ProjectTemplateInstantiateProjectRequest', function() {
      beforeEach(function() {
        instance = new Asana.ProjectTemplateInstantiateProjectRequest();
      });

      it('should create an instance of ProjectTemplateInstantiateProjectRequest', function() {
        // TODO: update the code to test ProjectTemplateInstantiateProjectRequest
        expect(instance).to.be.a(Asana.ProjectTemplateInstantiateProjectRequest);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property team (base name: "team")', function() {
        // TODO: update the code to test the property team
        expect(instance).to.have.property('team');
        // expect(instance.team).to.be(expectedValueLiteral);
      });

      it('should have the property _public (base name: "public")', function() {
        // TODO: update the code to test the property _public
        expect(instance).to.have.property('_public');
        // expect(instance._public).to.be(expectedValueLiteral);
      });

      it('should have the property is_strict (base name: "is_strict")', function() {
        // TODO: update the code to test the property is_strict
        expect(instance).to.have.property('is_strict');
        // expect(instance.is_strict).to.be(expectedValueLiteral);
      });

      it('should have the property requested_dates (base name: "requested_dates")', function() {
        // TODO: update the code to test the property requested_dates
        expect(instance).to.have.property('requested_dates');
        // expect(instance.requested_dates).to.be(expectedValueLiteral);
      });

      it('should have the property requested_roles (base name: "requested_roles")', function() {
        // TODO: update the code to test the property requested_roles
        expect(instance).to.have.property('requested_roles');
        // expect(instance.requested_roles).to.be(expectedValueLiteral);
      });

    });
  });

}));
