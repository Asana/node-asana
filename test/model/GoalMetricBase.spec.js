/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Asana);
  }
}(this, function(expect, Asana) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('GoalMetricBase', function() {
      beforeEach(function() {
        instance = new Asana.GoalMetricBase();
      });

      it('should create an instance of GoalMetricBase', function() {
        // TODO: update the code to test GoalMetricBase
        expect(instance).to.be.a(Asana.GoalMetricBase);
      });

      it('should have the property gid (base name: "gid")', function() {
        // TODO: update the code to test the property gid
        expect(instance).to.have.property('gid');
        // expect(instance.gid).to.be(expectedValueLiteral);
      });

      it('should have the property resource_type (base name: "resource_type")', function() {
        // TODO: update the code to test the property resource_type
        expect(instance).to.have.property('resource_type');
        // expect(instance.resource_type).to.be(expectedValueLiteral);
      });

      it('should have the property resource_subtype (base name: "resource_subtype")', function() {
        // TODO: update the code to test the property resource_subtype
        expect(instance).to.have.property('resource_subtype');
        // expect(instance.resource_subtype).to.be(expectedValueLiteral);
      });

      it('should have the property precision (base name: "precision")', function() {
        // TODO: update the code to test the property precision
        expect(instance).to.have.property('precision');
        // expect(instance.precision).to.be(expectedValueLiteral);
      });

      it('should have the property unit (base name: "unit")', function() {
        // TODO: update the code to test the property unit
        expect(instance).to.have.property('unit');
        // expect(instance.unit).to.be(expectedValueLiteral);
      });

      it('should have the property currency_code (base name: "currency_code")', function() {
        // TODO: update the code to test the property currency_code
        expect(instance).to.have.property('currency_code');
        // expect(instance.currency_code).to.be(expectedValueLiteral);
      });

      it('should have the property initial_number_value (base name: "initial_number_value")', function() {
        // TODO: update the code to test the property initial_number_value
        expect(instance).to.have.property('initial_number_value');
        // expect(instance.initial_number_value).to.be(expectedValueLiteral);
      });

      it('should have the property target_number_value (base name: "target_number_value")', function() {
        // TODO: update the code to test the property target_number_value
        expect(instance).to.have.property('target_number_value');
        // expect(instance.target_number_value).to.be(expectedValueLiteral);
      });

      it('should have the property current_number_value (base name: "current_number_value")', function() {
        // TODO: update the code to test the property current_number_value
        expect(instance).to.have.property('current_number_value');
        // expect(instance.current_number_value).to.be(expectedValueLiteral);
      });

      it('should have the property current_display_value (base name: "current_display_value")', function() {
        // TODO: update the code to test the property current_display_value
        expect(instance).to.have.property('current_display_value');
        // expect(instance.current_display_value).to.be(expectedValueLiteral);
      });

      it('should have the property progress_source (base name: "progress_source")', function() {
        // TODO: update the code to test the property progress_source
        expect(instance).to.have.property('progress_source');
        // expect(instance.progress_source).to.be(expectedValueLiteral);
      });

    });
  });

}));
