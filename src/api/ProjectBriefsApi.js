/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {EmptyResponseData} from '../model/EmptyResponseData';
import {ErrorResponse} from '../model/ErrorResponse';
import {ProjectBriefResponseData} from '../model/ProjectBriefResponseData';
import {ProjectBriefsProjectBriefGidBody} from '../model/ProjectBriefsProjectBriefGidBody';
import {ProjectGidProjectBriefsBody} from '../model/ProjectGidProjectBriefsBody';

/**
* ProjectBriefs service.
* @module api/ProjectBriefsApi
* @version 2.0.6
*/
export class ProjectBriefsApi {

    /**
    * Constructs a new ProjectBriefsApi. 
    * @alias module:api/ProjectBriefsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the createProjectBrief operation.
     * @callback moduleapi/ProjectBriefsApi~createProjectBriefCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProjectBriefResponseData{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a project brief
     * Creates a new project brief.  Returns the full record of the newly created project brief.
     * @param {module:model/ProjectGidProjectBriefsBody} body The project brief to create.
     * @param {String} project_gid Globally unique identifier for the project.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
     * @param {module:api/ProjectBriefsApi~createProjectBriefCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    createProjectBrief(body, project_gid, opts, callback) {
        opts = opts || {};
        let postBody = body;
        // verify the required parameter 'body' is set
        if (body === undefined || body === null) {
            throw new Error("Missing the required parameter 'body' when calling createProjectBrief");
        }
        // verify the required parameter 'project_gid' is set
        if (project_gid === undefined || project_gid === null) {
            throw new Error("Missing the required parameter 'project_gid' when calling createProjectBrief");
        }

        let pathParams = {
            'project_gid': project_gid
        };
        let queryParams = {
            'opt_fields': this.apiClient.buildCollectionParam(opts['opt_fields'], 'csv')
        };
        let headerParams = {
            
        };
        let formParams = {
            
        };

        let authNames = ['oauth2'];
        let contentTypes = ['application/json; charset=UTF-8'];
        let accepts = ['application/json; charset=UTF-8'];
        let returnType = ProjectBriefResponseData;

        return this.apiClient.callApi(
            '/projects/{project_gid}/project_briefs', 'POST',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, callback
        );
    }
    /**
     * Callback function to receive the result of the deleteProjectBrief operation.
     * @callback moduleapi/ProjectBriefsApi~deleteProjectBriefCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EmptyResponseData{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a project brief
     * Deletes a specific, existing project brief.  Returns an empty data record.
     * @param {String} project_brief_gid Globally unique identifier for the project brief.
     * @param {module:api/ProjectBriefsApi~deleteProjectBriefCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    deleteProjectBrief(project_brief_gid, callback) {
        
        let postBody = null;
        // verify the required parameter 'project_brief_gid' is set
        if (project_brief_gid === undefined || project_brief_gid === null) {
            throw new Error("Missing the required parameter 'project_brief_gid' when calling deleteProjectBrief");
        }

        let pathParams = {
            'project_brief_gid': project_brief_gid
        };
        let queryParams = {
            
        };
        let headerParams = {
            
        };
        let formParams = {
            
        };

        let authNames = ['oauth2'];
        let contentTypes = [];
        let accepts = ['application/json; charset=UTF-8'];
        let returnType = EmptyResponseData;

        return this.apiClient.callApi(
            '/project_briefs/{project_brief_gid}', 'DELETE',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, callback
        );
    }
    /**
     * Callback function to receive the result of the getProjectBrief operation.
     * @callback moduleapi/ProjectBriefsApi~getProjectBriefCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProjectBriefResponseData{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a project brief
     * Get the full record for a project brief.
     * @param {String} project_brief_gid Globally unique identifier for the project brief.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
     * @param {module:api/ProjectBriefsApi~getProjectBriefCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getProjectBrief(project_brief_gid, opts, callback) {
        opts = opts || {};
        let postBody = null;
        // verify the required parameter 'project_brief_gid' is set
        if (project_brief_gid === undefined || project_brief_gid === null) {
            throw new Error("Missing the required parameter 'project_brief_gid' when calling getProjectBrief");
        }

        let pathParams = {
            'project_brief_gid': project_brief_gid
        };
        let queryParams = {
            'opt_fields': this.apiClient.buildCollectionParam(opts['opt_fields'], 'csv')
        };
        let headerParams = {
            
        };
        let formParams = {
            
        };

        let authNames = ['oauth2'];
        let contentTypes = [];
        let accepts = ['application/json; charset=UTF-8'];
        let returnType = ProjectBriefResponseData;

        return this.apiClient.callApi(
            '/project_briefs/{project_brief_gid}', 'GET',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, callback
        );
    }
    /**
     * Callback function to receive the result of the updateProjectBrief operation.
     * @callback moduleapi/ProjectBriefsApi~updateProjectBriefCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProjectBriefResponseData{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a project brief
     * An existing project brief can be updated by making a PUT request on the URL for that project brief. Only the fields provided in the &#x60;data&#x60; block will be updated; any unspecified fields will remain unchanged.  Returns the complete updated project brief record.
     * @param {module:model/ProjectBriefsProjectBriefGidBody} body The updated fields for the project brief.
     * @param {String} project_brief_gid Globally unique identifier for the project brief.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
     * @param {module:api/ProjectBriefsApi~updateProjectBriefCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    updateProjectBrief(body, project_brief_gid, opts, callback) {
        opts = opts || {};
        let postBody = body;
        // verify the required parameter 'body' is set
        if (body === undefined || body === null) {
            throw new Error("Missing the required parameter 'body' when calling updateProjectBrief");
        }
        // verify the required parameter 'project_brief_gid' is set
        if (project_brief_gid === undefined || project_brief_gid === null) {
            throw new Error("Missing the required parameter 'project_brief_gid' when calling updateProjectBrief");
        }

        let pathParams = {
            'project_brief_gid': project_brief_gid
        };
        let queryParams = {
            'opt_fields': this.apiClient.buildCollectionParam(opts['opt_fields'], 'csv')
        };
        let headerParams = {
            
        };
        let formParams = {
            
        };

        let authNames = ['oauth2'];
        let contentTypes = ['application/json; charset=UTF-8'];
        let accepts = ['application/json; charset=UTF-8'];
        let returnType = ProjectBriefResponseData;

        return this.apiClient.callApi(
            '/project_briefs/{project_brief_gid}', 'PUT',
            pathParams, queryParams, headerParams, formParams, postBody,
            authNames, contentTypes, accepts, returnType, callback
        );
    }

}
