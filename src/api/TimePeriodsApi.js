/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from "../ApiClient";
import {ErrorResponse} from '../model/ErrorResponse';
import {TimePeriodResponseArray} from '../model/TimePeriodResponseArray';
import {TimePeriodResponseData} from '../model/TimePeriodResponseData';

/**
* TimePeriods service.
* @module api/TimePeriodsApi
* @version 2.0.0
*/
export class TimePeriodsApi {

    /**
    * Constructs a new TimePeriodsApi. 
    * @alias module:api/TimePeriodsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the getTimePeriod operation.
     * @callback moduleapi/TimePeriodsApi~getTimePeriodCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TimePeriodResponseData{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a time period
     * Returns the full record for a single time period.
     * @param {String} time_period_gid Globally unique identifier for the time period.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
     * @param {module:api/TimePeriodsApi~getTimePeriodCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getTimePeriod(time_period_gid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'time_period_gid' is set
      if (time_period_gid === undefined || time_period_gid === null) {
        throw new Error("Missing the required parameter 'time_period_gid' when calling getTimePeriod");
      }

      let pathParams = {
        'time_period_gid': time_period_gid
      };
      let queryParams = {
        'opt_fields': this.apiClient.buildCollectionParam(opts['opt_fields'], 'csv')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json; charset=UTF-8'];
      let returnType = TimePeriodResponseData;

      return this.apiClient.callApi(
        '/time_periods/{time_period_gid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the getTimePeriods operation.
     * @callback moduleapi/TimePeriodsApi~getTimePeriodsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TimePeriodResponseArray{ data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get time periods
     * Returns compact time period records.
     * @param {String} workspace Globally unique identifier for the workspace.
     * @param {Object} opts Optional parameters
     * @param {Number} opts.limit Results per page. The number of objects to return per page. The value must be between 1 and 100.
     * @param {String} opts.offset Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. &#x27;Note: You can only pass in an offset that was returned to you via a previously paginated request.&#x27;
     * @param {Date} opts.start_on ISO 8601 date string
     * @param {Date} opts.end_on ISO 8601 date string
     * @param {Array.<module:model/String>} opts.opt_fields This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
     * @param {module:api/TimePeriodsApi~getTimePeriodsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link <&vendorExtensions.x-jsdoc-type>}
     */
    getTimePeriods(workspace, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'workspace' is set
      if (workspace === undefined || workspace === null) {
        throw new Error("Missing the required parameter 'workspace' when calling getTimePeriods");
      }

      let pathParams = {
        
      };
      let queryParams = {
        'limit': opts['limit'],'offset': opts['offset'],'start_on': opts['start_on'],'end_on': opts['end_on'],'workspace': workspace,'opt_fields': this.apiClient.buildCollectionParam(opts['opt_fields'], 'csv')
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = ['oauth2'];
      let contentTypes = [];
      let accepts = ['application/json; charset=UTF-8'];
      let returnType = TimePeriodResponseArray;

      return this.apiClient.callApi(
        '/time_periods', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}