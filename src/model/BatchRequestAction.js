/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {BatchRequestOptions} from './BatchRequestOptions';

/**
 * The BatchRequestAction model module.
 * @module model/BatchRequestAction
 * @version 2.0.1
 */
export class BatchRequestAction {
  /**
   * Constructs a new <code>BatchRequestAction</code>.
   * An action object for use in a batch request.
   * @alias module:model/BatchRequestAction
   * @class
   * @param relative_path {String} The path of the desired endpoint relative to the API’s base URL. Query parameters are not accepted here; put them in `data` instead.
   * @param method {module:model/BatchRequestAction.MethodEnum} The HTTP method you wish to emulate for the action.
   */
  constructor(relative_path, method) {
    this.relative_path = relative_path;
    this.method = method;
  }

  /**
   * Constructs a <code>BatchRequestAction</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BatchRequestAction} obj Optional instance to populate.
   * @return {module:model/BatchRequestAction} The populated <code>BatchRequestAction</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new BatchRequestAction();
      if (data.hasOwnProperty('relative_path'))
        obj.relative_path = ApiClient.convertToType(data['relative_path'], 'String');
      if (data.hasOwnProperty('method'))
        obj.method = ApiClient.convertToType(data['method'], 'String');
      if (data.hasOwnProperty('data'))
        obj.data = ApiClient.convertToType(data['data'], Object);
      if (data.hasOwnProperty('options'))
        obj.options = BatchRequestOptions.constructFromObject(data['options']);
    }
    return obj;
  }
}

/**
 * The path of the desired endpoint relative to the API’s base URL. Query parameters are not accepted here; put them in `data` instead.
 * @member {String} relative_path
 */
BatchRequestAction.prototype.relative_path = undefined;

/**
 * Allowed values for the <code>method</code> property.
 * @enum {String}
 * @readonly
 */
BatchRequestAction.MethodEnum = {
  /**
   * value: "get"
   * @const
   */
  get: "get",

  /**
   * value: "post"
   * @const
   */
  post: "post",

  /**
   * value: "put"
   * @const
   */
  put: "put",

  /**
   * value: "delete"
   * @const
   */
  _delete: "delete",

  /**
   * value: "patch"
   * @const
   */
  patch: "patch",

  /**
   * value: "head"
   * @const
   */
  head: "head"
};
/**
 * The HTTP method you wish to emulate for the action.
 * @member {module:model/BatchRequestAction.MethodEnum} method
 */
BatchRequestAction.prototype.method = undefined;

/**
 * For `GET` requests, this should be a map of query parameters you would have normally passed in the URL. Options and pagination are not accepted here; put them in `options` instead. For `POST`, `PATCH`, and `PUT` methods, this should be the content you would have normally put in the data field of the body.
 * @member {Object} data
 */
BatchRequestAction.prototype.data = undefined;

/**
 * @member {module:model/BatchRequestOptions} options
 */
BatchRequestAction.prototype.options = undefined;

