/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {CustomFieldResponseCreatedBy} from './CustomFieldResponseCreatedBy';
import {CustomFieldResponsePeopleValue} from './CustomFieldResponsePeopleValue';
import {GoalResponseCurrentStatusUpdate} from './GoalResponseCurrentStatusUpdate';
import {GoalResponseLikes} from './GoalResponseLikes';
import {GoalResponseMetric} from './GoalResponseMetric';
import {GoalResponseTeam} from './GoalResponseTeam';
import {GoalResponseTimePeriod} from './GoalResponseTimePeriod';
import {GoalResponseWorkspace} from './GoalResponseWorkspace';

/**
 * The GoalResponse model module.
 * @module model/GoalResponse
 * @version 2.0.5
 */
export class GoalResponse {
  /**
   * Constructs a new <code>GoalResponse</code>.
   * A generic Asana Resource, containing a globally unique identifier.
   * @alias module:model/GoalResponse
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>GoalResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GoalResponse} obj Optional instance to populate.
   * @return {module:model/GoalResponse} The populated <code>GoalResponse</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new GoalResponse();
      if (data.hasOwnProperty('gid'))
        obj.gid = ApiClient.convertToType(data['gid'], 'String');
      if (data.hasOwnProperty('resource_type'))
        obj.resource_type = ApiClient.convertToType(data['resource_type'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('html_notes'))
        obj.html_notes = ApiClient.convertToType(data['html_notes'], 'String');
      if (data.hasOwnProperty('notes'))
        obj.notes = ApiClient.convertToType(data['notes'], 'String');
      if (data.hasOwnProperty('due_on'))
        obj.due_on = ApiClient.convertToType(data['due_on'], 'String');
      if (data.hasOwnProperty('start_on'))
        obj.start_on = ApiClient.convertToType(data['start_on'], 'String');
      if (data.hasOwnProperty('is_workspace_level'))
        obj.is_workspace_level = ApiClient.convertToType(data['is_workspace_level'], 'Boolean');
      if (data.hasOwnProperty('liked'))
        obj.liked = ApiClient.convertToType(data['liked'], 'Boolean');
      if (data.hasOwnProperty('likes'))
        obj.likes = ApiClient.convertToType(data['likes'], [GoalResponseLikes]);
      if (data.hasOwnProperty('num_likes'))
        obj.num_likes = ApiClient.convertToType(data['num_likes'], 'Number');
      if (data.hasOwnProperty('team'))
        obj.team = GoalResponseTeam.constructFromObject(data['team']);
      if (data.hasOwnProperty('workspace'))
        obj.workspace = GoalResponseWorkspace.constructFromObject(data['workspace']);
      if (data.hasOwnProperty('followers'))
        obj.followers = ApiClient.convertToType(data['followers'], [CustomFieldResponsePeopleValue]);
      if (data.hasOwnProperty('time_period'))
        obj.time_period = GoalResponseTimePeriod.constructFromObject(data['time_period']);
      if (data.hasOwnProperty('metric'))
        obj.metric = GoalResponseMetric.constructFromObject(data['metric']);
      if (data.hasOwnProperty('owner'))
        obj.owner = CustomFieldResponseCreatedBy.constructFromObject(data['owner']);
      if (data.hasOwnProperty('current_status_update'))
        obj.current_status_update = GoalResponseCurrentStatusUpdate.constructFromObject(data['current_status_update']);
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
    }
    return obj;
  }
}

/**
 * Globally unique identifier of the resource, as a string.
 * @member {String} gid
 */
GoalResponse.prototype.gid = undefined;

/**
 * The base type of this resource.
 * @member {String} resource_type
 */
GoalResponse.prototype.resource_type = undefined;

/**
 * The name of the goal.
 * @member {String} name
 */
GoalResponse.prototype.name = undefined;

/**
 * The notes of the goal with formatting as HTML.
 * @member {String} html_notes
 */
GoalResponse.prototype.html_notes = undefined;

/**
 * Free-form textual information associated with the goal (i.e. its description).
 * @member {String} notes
 */
GoalResponse.prototype.notes = undefined;

/**
 * The localized day on which this goal is due. This takes a date with format `YYYY-MM-DD`.
 * @member {String} due_on
 */
GoalResponse.prototype.due_on = undefined;

/**
 * The day on which work for this goal begins, or null if the goal has no start date. This takes a date with `YYYY-MM-DD` format, and cannot be set unless there is an accompanying due date.
 * @member {String} start_on
 */
GoalResponse.prototype.start_on = undefined;

/**
 * *Conditional*. This property is only present when the `workspace` provided is an organization. Whether the goal belongs to the `workspace` (and is listed as part of the workspace’s goals) or not. If it isn’t a workspace-level goal, it is a team-level goal, and is associated with the goal’s team.
 * @member {Boolean} is_workspace_level
 */
GoalResponse.prototype.is_workspace_level = undefined;

/**
 * True if the goal is liked by the authorized user, false if not.
 * @member {Boolean} liked
 */
GoalResponse.prototype.liked = undefined;

/**
 * Array of likes for users who have liked this goal.
 * @member {Array.<module:model/GoalResponseLikes>} likes
 */
GoalResponse.prototype.likes = undefined;

/**
 * The number of users who have liked this goal.
 * @member {Number} num_likes
 */
GoalResponse.prototype.num_likes = undefined;

/**
 * @member {module:model/GoalResponseTeam} team
 */
GoalResponse.prototype.team = undefined;

/**
 * @member {module:model/GoalResponseWorkspace} workspace
 */
GoalResponse.prototype.workspace = undefined;

/**
 * Array of users who are members of this goal.
 * @member {Array.<module:model/CustomFieldResponsePeopleValue>} followers
 */
GoalResponse.prototype.followers = undefined;

/**
 * @member {module:model/GoalResponseTimePeriod} time_period
 */
GoalResponse.prototype.time_period = undefined;

/**
 * @member {module:model/GoalResponseMetric} metric
 */
GoalResponse.prototype.metric = undefined;

/**
 * @member {module:model/CustomFieldResponseCreatedBy} owner
 */
GoalResponse.prototype.owner = undefined;

/**
 * @member {module:model/GoalResponseCurrentStatusUpdate} current_status_update
 */
GoalResponse.prototype.current_status_update = undefined;

/**
 * The current status of this goal. When the goal is open, its status can be `green`, `yellow`, and `red` to reflect \"On Track\", \"At Risk\", and \"Off Track\", respectively. When the goal is closed, the value can be `missed`, `achieved`, `partial`, or `dropped`. *Note* you can only write to this property if `metric` is set.
 * @member {String} status
 */
GoalResponse.prototype.status = undefined;

