/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {AttachmentResponseParent} from './AttachmentResponseParent';

/**
 * The AttachmentResponse model module.
 * @module model/AttachmentResponse
 * @version 2.0.0
 */
export class AttachmentResponse {
  /**
   * Constructs a new <code>AttachmentResponse</code>.
   * A generic Asana Resource, containing a globally unique identifier.A generic Asana Resource, containing a globally unique identifier. An *attachment* object represents any file attached to a task in Asana, whether itâ€™s an uploaded file or one associated via a third-party service such as Dropbox or Google Drive.
   * @alias module:model/AttachmentResponse
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>AttachmentResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AttachmentResponse} obj Optional instance to populate.
   * @return {module:model/AttachmentResponse} The populated <code>AttachmentResponse</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new AttachmentResponse();
      if (data.hasOwnProperty('gid'))
        obj.gid = ApiClient.convertToType(data['gid'], 'String');
      if (data.hasOwnProperty('resource_type'))
        obj.resource_type = ApiClient.convertToType(data['resource_type'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('resource_subtype'))
        obj.resource_subtype = ApiClient.convertToType(data['resource_subtype'], 'String');
      if (data.hasOwnProperty('created_at'))
        obj.created_at = ApiClient.convertToType(data['created_at'], 'Date');
      if (data.hasOwnProperty('download_url'))
        obj.download_url = ApiClient.convertToType(data['download_url'], 'String');
      if (data.hasOwnProperty('permanent_url'))
        obj.permanent_url = ApiClient.convertToType(data['permanent_url'], 'String');
      if (data.hasOwnProperty('host'))
        obj.host = ApiClient.convertToType(data['host'], 'String');
      if (data.hasOwnProperty('parent'))
        obj.parent = AttachmentResponseParent.constructFromObject(data['parent']);
      if (data.hasOwnProperty('size'))
        obj.size = ApiClient.convertToType(data['size'], 'Number');
      if (data.hasOwnProperty('view_url'))
        obj.view_url = ApiClient.convertToType(data['view_url'], 'String');
      if (data.hasOwnProperty('connected_to_app'))
        obj.connected_to_app = ApiClient.convertToType(data['connected_to_app'], 'Boolean');
    }
    return obj;
  }
}

/**
 * Globally unique identifier of the resource, as a string.
 * @member {String} gid
 */
AttachmentResponse.prototype.gid = undefined;

/**
 * The base type of this resource.
 * @member {String} resource_type
 */
AttachmentResponse.prototype.resource_type = undefined;

/**
 * The name of the file.
 * @member {String} name
 */
AttachmentResponse.prototype.name = undefined;

/**
 * The service hosting the attachment. Valid values are `asana`, `dropbox`, `gdrive`, `onedrive`, `box`, `vimeo`, and `external`.
 * @member {String} resource_subtype
 */
AttachmentResponse.prototype.resource_subtype = undefined;

/**
 * The time at which this resource was created.
 * @member {Date} created_at
 */
AttachmentResponse.prototype.created_at = undefined;

/**
 * The URL containing the content of the attachment. *Note:* May be null if the attachment is hosted by [Box](https://www.box.com/) and will be null if the attachment is a Video Message hosted by [Vimeo](https://vimeo.com/). If present, this URL may only be valid for two minutes from the time of retrieval. You should avoid persisting this URL somewhere and just refresh it on demand to ensure you do not keep stale URLs.
 * @member {String} download_url
 */
AttachmentResponse.prototype.download_url = undefined;

/**
 * @member {String} permanent_url
 */
AttachmentResponse.prototype.permanent_url = undefined;

/**
 * The service hosting the attachment. Valid values are `asana`, `dropbox`, `gdrive`, `box`, and `vimeo`.
 * @member {String} host
 */
AttachmentResponse.prototype.host = undefined;

/**
 * @member {module:model/AttachmentResponseParent} parent
 */
AttachmentResponse.prototype.parent = undefined;

/**
 * The size of the attachment in bytes. Only present when the `resource_subtype` is `asana`.
 * @member {Number} size
 */
AttachmentResponse.prototype.size = undefined;

/**
 * The URL where the attachment can be viewed, which may be friendlier to users in a browser than just directing them to a raw file. May be null if no view URL exists for the service.
 * @member {String} view_url
 */
AttachmentResponse.prototype.view_url = undefined;

/**
 * Whether the attachment is connected to the app making the request for the purposes of showing an app components widget. Only present when the `resource_subtype` is `external` or `gdrive`.
 * @member {Boolean} connected_to_app
 */
AttachmentResponse.prototype.connected_to_app = undefined;

