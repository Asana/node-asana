/*
 * Asana
 * This is the interface for interacting with the [Asana Platform](https://developers.asana.com). Our API reference is generated from our [OpenAPI spec] (https://raw.githubusercontent.com/Asana/openapi/master/defs/asana_oas.yaml).
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.46
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {GoalMembershipResponseUser} from './GoalMembershipResponseUser';
import {GoalMembershipResponseWorkspace} from './GoalMembershipResponseWorkspace';
import {MembershipCompactGoal} from './MembershipCompactGoal';
import {MembershipCompactMember} from './MembershipCompactMember';
import {MembershipCompactParent} from './MembershipCompactParent';

/**
 * The GoalMembershipResponse model module.
 * @module model/GoalMembershipResponse
 * @version 2.0.4
 */
export class GoalMembershipResponse {
  /**
   * Constructs a new <code>GoalMembershipResponse</code>.
   * A generic Asana Resource, containing a globally unique identifier.A generic Asana Resource, containing a globally unique identifier. This object represents a user&#x27;s connection to a goal.
   * @alias module:model/GoalMembershipResponse
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>GoalMembershipResponse</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GoalMembershipResponse} obj Optional instance to populate.
   * @return {module:model/GoalMembershipResponse} The populated <code>GoalMembershipResponse</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new GoalMembershipResponse();
      if (data.hasOwnProperty('gid'))
        obj.gid = ApiClient.convertToType(data['gid'], 'String');
      if (data.hasOwnProperty('resource_type'))
        obj.resource_type = ApiClient.convertToType(data['resource_type'], 'String');
      if (data.hasOwnProperty('resource_subtype'))
        obj.resource_subtype = ApiClient.convertToType(data['resource_subtype'], 'String');
      if (data.hasOwnProperty('member'))
        obj.member = MembershipCompactMember.constructFromObject(data['member']);
      if (data.hasOwnProperty('parent'))
        obj.parent = MembershipCompactParent.constructFromObject(data['parent']);
      if (data.hasOwnProperty('role'))
        obj.role = ApiClient.convertToType(data['role'], 'String');
      if (data.hasOwnProperty('goal'))
        obj.goal = MembershipCompactGoal.constructFromObject(data['goal']);
      if (data.hasOwnProperty('user'))
        obj.user = GoalMembershipResponseUser.constructFromObject(data['user']);
      if (data.hasOwnProperty('workspace'))
        obj.workspace = GoalMembershipResponseWorkspace.constructFromObject(data['workspace']);
    }
    return obj;
  }
}

/**
 * Globally unique identifier of the resource, as a string.
 * @member {String} gid
 */
GoalMembershipResponse.prototype.gid = undefined;

/**
 * The base type of this resource.
 * @member {String} resource_type
 */
GoalMembershipResponse.prototype.resource_type = undefined;

/**
 * The type of membership.
 * @member {String} resource_subtype
 */
GoalMembershipResponse.prototype.resource_subtype = undefined;

/**
 * @member {module:model/MembershipCompactMember} member
 */
GoalMembershipResponse.prototype.member = undefined;

/**
 * @member {module:model/MembershipCompactParent} parent
 */
GoalMembershipResponse.prototype.parent = undefined;

/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
GoalMembershipResponse.RoleEnum = {
  /**
   * value: "commenter"
   * @const
   */
  commenter: "commenter",

  /**
   * value: "editor"
   * @const
   */
  editor: "editor"
};
/**
 * Describes if the member is a commenter or editor in goal.
 * @member {module:model/GoalMembershipResponse.RoleEnum} role
 */
GoalMembershipResponse.prototype.role = undefined;

/**
 * @member {module:model/MembershipCompactGoal} goal
 */
GoalMembershipResponse.prototype.goal = undefined;

/**
 * @member {module:model/GoalMembershipResponseUser} user
 */
GoalMembershipResponse.prototype.user = undefined;

/**
 * @member {module:model/GoalMembershipResponseWorkspace} workspace
 */
GoalMembershipResponse.prototype.workspace = undefined;

