/**
 * This file is auto-generated by the `asana-api-meta` NodeJS package.
 * We try to keep the generated code pretty clean but there will be lint
 * errors that are just not worth fixing (like unused requires).
 * TODO: maybe we can just disable those specifically and keep this code
 * pretty lint-free too!
 */
/* jshint ignore:start */
var Resource = require('../resource');
var util = require('util');
var _ = require('lodash');

/**
 * An _attachment_ object represents any file attached to a task in Asana,
 * whether it's an uploaded file or one associated via a third-party service
 * such as Dropbox or Google Drive.
 * @class
 * @param {Dispatcher} dispatcher The API dispatcher
 */
function Attachments(dispatcher) {
  Resource.call(this, dispatcher);
}
util.inherits(Attachments, Resource);


/**
 * Returns the full record for a single attachment.
   * @param {String} attachment Globally unique identifier for the attachment.
   * @param {Object} [params] Parameters for the request
   * @param {Object} [dispatchOptions] Options, if any, to pass the dispatcher for the request
   * @return {Promise} The requested resource
 */
Attachments.prototype.findById = function(
    attachment,
    params,
    dispatchOptions
) {
  var path = util.format('/attachments/%s', attachment);
  
  return this.dispatchGet(path, params, dispatchOptions);
};

/**
 * Returns the compact records for all attachments on the task.
   * @param {String} task Globally unique identifier for the task.
   * @param {Object} [params] Parameters for the request
   * @param {Object} [dispatchOptions] Options, if any, to pass the dispatcher for the request
   * @return {Promise} The response from the API
 */
Attachments.prototype.findByTask = function(
    task,
    params,
    dispatchOptions
) {
  var path = util.format('/tasks/%s/attachments', task);
  
  return this.dispatchGetCollection(path, params, dispatchOptions);
};


module.exports = Attachments;
/* jshint ignore:end */