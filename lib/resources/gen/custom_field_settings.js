/**
 * This file is auto-generated by the `asana-api-meta` NodeJS package.
 * We try to keep the generated code pretty clean but there will be lint
 * errors that are just not worth fixing (like unused requires).
 * TODO: maybe we can just disable those specifically and keep this code
 * pretty lint-free too!
 */
/* jshint ignore:start */
var Resource = require('../resource');
var util = require('util');
var _ = require('lodash');

/**
 * Custom fields are attached to a particular project with the Custom
 * Field Settings resource. This resource both represents the many-to-many join
 * of the Custom Field and Project as well as stores information that is relevant to that
 * particular pairing; for instance, the `is_important` property determines
 * some possible application-specific handling of that custom field (see below)
 * @class
 * @param {Dispatcher} dispatcher The API dispatcher
 */
function CustomFieldSettings(dispatcher) {
  Resource.call(this, dispatcher);
}
util.inherits(CustomFieldSettings, Resource);


/**
 * Returns a list of all of the custom fields settings on a project, in compact form. Note that, as in all queries to collections which return compact representation, `opt_fields` and `opt_expand` can be used to include more data than is returned in the compact representation. See the getting started guide on [input/output options](/developers/documentation/getting-started/input-output-options) for more information.
   * @param {String} project The ID of the project for which to list custom field settings
   * @param {Object} [params] Parameters for the request
   * @param {Object} [dispatchOptions] Options, if any, to pass the dispatcher for the request
   * @return {Promise} The response from the API
 */
CustomFieldSettings.prototype.findByProject = function(
    project,
    params,
    dispatchOptions
) {
  var path = util.format('/projects/%s/custom_field_settings', project);
  
  return this.dispatchGetCollection(path, params, dispatchOptions);
};


module.exports = CustomFieldSettings;
/* jshint ignore:end */